//Setup
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv('COBRA-YTD2017.csv', delimiter=',')

//Overview of columns
print('DataFrame Head')
print('______________')
pd.read_csv('COBRA-YTD2017.csv',delimiter=',').head()

//Types of Crimes
print('Types')
print('_____')
types = pd.DataFrame(data=df['UC2 Literal'].unique())
types

//Counting the instances of each type
print('Crime Type Counts')
print('_________________')
t = df['UC2 Literal']
typecount = pd.DataFrame(data=t.value_counts())
print(typecount)
s=typecount.sum()
print('Sum: ',s)

//Counting the instances of Larceny from Vehicle in 2017
seventeen1=td.loc['2017-01-01':'2017-12-31']
ax = seventeen1['LARCENY-FROM VEHICLE'].plot(figsize=(12, 8))
plt.legend(loc='center left',bbox_to_anchor=(1.0,0.5))
plt.title('Crime Types over 2017')
plt.ylabel('Crimes Per Day')
plt.xlabel('Date')
ax.set_xticklabels(['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'])
plt.legend(loc='upper left')
plt.title('Larceny from Vehicle over 2017')
plt.ylabel('Crimes Per Day')
plt.xticks(np.arange(0, 365, 31))


//Showing the counts for just the year 2017
minitd= pd.DataFrame(data = td.loc['2017-01-01':'2017-12-31'])
sums = pd.DataFrame(data = minitd.sum(axis = 0))
sums
graph = sums.plot(kind='bar')
plt.title('Crime Counts in 2017')
plt.xlabel('Crime Types')
plt.ylabel('Crime Count')
graph.get_legend().remove()


//Creating a new dataframe to hold the crime types and date, then graphing the crime type counts
odate = pd.DataFrame(data = df['occur_date'])
typedate = pd.concat([odate,t], axis = 1)
typecount = pd.DataFrame(data=typedate['UC2 Literal'].value_counts())
graph1 = typecount.plot(kind='bar')
plt.title('Crime Counts in Data')
plt.xlabel('Crime Types')
plt.ylabel('Crime Count')
graph1.get_legend().remove()

//reformatting the date and adjusting the types to be numeric
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('LARCENY-FROM VEHICLE',0)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('LARCENY-NON VEHICLE',1)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('AUTO THEFT',2)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('BURGLARY-RESIDENCE',3)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('AGG ASSAULT',4)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('ROBBERY-PEDESTRIAN',5)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('BURGLARY-NONRES',6)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('RAPE',7)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('ROBBERY-COMMERCIAL',8)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('ROBBERY-RESIDENCE',9)
typedate['UC2 Literal'] = typedate['UC2 Literal'].replace('HOMICIDE',10)
i=0
old=str(typedate.at[i,'occur_date'])
for index,row in typedate.iterrows():
    old=str(typedate.at[i,'occur_date'])
    new=old[6:10]+'-'+old[0:2]+'-'+old[3:5]
    typedate.at[i,'occur_date']=new
    i+=1
    
//Sorting by date
typedate.head()
typedate=typedate.set_index('occur_date',drop=True)
typedate=typedate.sort_index()
typedate=typedate.reset_index()

//Creating a new dataframe with a column for each crime type, each row will show the count of each crime type for each day
td = pd.DataFrame(columns=['date','LARCENY-FROM VEHICLE','LARCENY-NON VEHICLE','AUTO THEFT','BURGLARY-RESIDENCE','AGG ASSAULT','ROBBERY-PEDESTRIAN','BURGLARY-NONRES','RAPE','ROBBERY-COMMERCIAL','ROBBERY-RESIDENCE','HOMICIDE'])
for index, row in typedate.iterrows():
    td.at[row['occur_date'],'date'] = row['occur_date']
    td = td.fillna(0)
    if row['UC2 Literal'] == 0:
        td.at[row['occur_date'],'LARCENY-FROM VEHICLE'] += 1
    if row['UC2 Literal'] == 1:
        td.at[row['occur_date'],'LARCENY-NON VEHICLE'] += 1
    if row['UC2 Literal'] == 2:
        td.at[row['occur_date'],'AUTO THEFT'] += 1
    if row['UC2 Literal'] == 3:
        td.at[row['occur_date'],'BURGLARY-RESIDENCE'] += 1
    if row['UC2 Literal'] == 4:
        td.at[row['occur_date'],'AGG ASSAULT'] += 1
    if row['UC2 Literal'] == 5:
        td.at[row['occur_date'],'ROBBERY-PEDESTRIAN'] += 1
    if row['UC2 Literal'] == 6:
        td.at[row['occur_date'],'BURGLARY-NONRES'] += 1
    if row['UC2 Literal'] == 7:
        td.at[row['occur_date'],'RAPE'] += 1
    if row['UC2 Literal'] == 8:
        td.at[row['occur_date'],'ROBBERY-COMMERCIAL'] += 1
    if row['UC2 Literal'] == 9:
        td.at[row['occur_date'],'ROBBERY-RESIDENCE'] += 1
    if row['UC2 Literal'] == 10:
        td.at[row['occur_date'],'HOMICIDE'] += 1
td.sort_values(by=['date'])
td = td.set_index('date',drop=True)
typedate.head()

//Graphing each crime instance over the year 2017
seventeen1=td.loc['2017-01-01':'2017-12-31']
ax = seventeen1.plot(figsize=(12, 8))
plt.title('Crime Types over 2017')
plt.ylabel('Crimes Per Day')
plt.xlabel('Date')
plt.legend(loc='center left')
plt.xticks(np.arange(0, 365, 31))
ax.set_xticklabels(['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'])
plt.legend(loc='upper left')


//Reformatting the date for the full dataset
whole = pd.read_csv('COBRA-YTD2017.csv',delimiter=',')
i=0
for index,row in whole.iterrows():
    old=str(whole.at[i,'occur_date'])
    new=old[6:10]+'-'+old[0:2]+'-'+old[3:5]
    whole.at[i,'occur_date']=new
    old=str(whole.at[i,'poss_date'])
    new=old[6:10]+'-'+old[0:2]+'-'+old[3:5]
    whole.at[i,'poss_date']=new
    i+=1
 whole = whole.sort_index()
 whole.head()
 
 //Graphing the points of crime by type on a map of atlanta
import descartes
import geopandas as gpd
from shapely.geometry import Point, Polygon
import matplotlib.lines as mlines
%matplotlib inline
street_map = gpd.read_file(r"C:\Users\Ethan\Documents\School\Data Science\Major_Roads\Major_Roads.shp")
partwhole = pd.DataFrame(data = whole.loc[(whole['occur_date'] >= '2017-01-01') & (whole['occur_date'] <='2017-12-31')])
partwhole = partwhole.rename(index=str, columns={"x":"longitude","y":"latitude"})
crs = {'init': 'epsg:4326'}
geometry = [Point(xy) for xy in zip(partwhole["longitude"], partwhole["latitude"])]
geo_partwhole = gpd.GeoDataFrame(partwhole, crs = crs, geometry = geometry)
geo_partwhole.head()
fig,ax = plt.subplots(figsize=(250,250))
street_map.plot(ax = ax, alpha = 0.4,color="grey", linewidth=2.0)
geo_partwhole[geo_partwhole['UC2 Literal'] == 'LARCENY-NON VEHICLE'].plot(ax=ax, markersize = 10, color = "#00FF00", label= 'LARCENY-FROM VEHICLE')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'LARCENY-FROM VEHICLE'].plot(ax=ax, markersize = 10, color = "#008000", label= 'LARCENY-FROM VEHICLE')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'ROBBERY-PEDESTRIAN'].plot(ax=ax, markersize = 10, color = "#00FFFF", label= 'ROBBERY-PEDESTRIAN')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'ROBBERY-RESIDENCE'].plot(ax=ax, markersize = 10, color = "#008080", label= 'ROBBERY-RESIDENCE')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'ROBBERY-COMMERCIAL'].plot(ax=ax, markersize = 10, color = "#0000FF", label= 'ROBBERY-COMMERCIAL')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'BURGLARY-RESIDENCE'].plot(ax=ax, markersize = 10, color = "#800080", label= 'BURGLARY-RESIDENCE')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'BURGLARY-NONRES'].plot(ax=ax, markersize = 10, color = "#FF00FF", label= 'BURGLARY-NONRES')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'AUTO THEFT'].plot(ax=ax, markersize = 10, color = "yellow", label= 'AUTO THEFT')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'AGG ASSAULT'].plot(ax=ax, markersize = 10, color = "#808000", label= 'AGG ASSAULT')
geo_partwhole[geo_partwhole['UC2 Literal'] == 'HOMICIDE'].plot(ax=ax, markersize = 10, color = "#800000", label= 'HOMICIDE')
plt.legend(prop={'size': 250})
plt.savefig('crime_type_on_maps.png')
